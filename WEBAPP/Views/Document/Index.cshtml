@using System.Security.Claims;
@using WEBAPP.VModels;
@model List<IndexCourseVM>

<!doctype html>
<html lang="en">

<head>
    <title>Title</title>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <!-- Bootstrap CSS v5.2.1 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
    <link rel="stylesheet" href="css/cources.css">
</head>

<body>
    <div class="model-layer">
        <div class="card">
            <div class="header">
                <div class="image">
                    <svg aria-hidden="true" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"
                         fill="none">
                        <path d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"
                              stroke-linejoin="round" stroke-linecap="round"></path>
                    </svg>
                </div>
                <div class="content">
                    <span class="title">Delete cours</span>
                    <p class="message">
                        Are you sure you want to delete this cours? All of your data will be
                        permanently removed. This action cannot be undone.
                    </p>
                </div>
                <div class="actions">
                    <button class="desactivate" type="button" >Delete</button>
                    <button class="cancel" type="button" >Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Bootstrap JavaScript Libraries -->
    <nav class="navbar navbar-expand-lg navbar-light ">
        <div class="container">
            <a class="navbar-brand" href="#">Learn<span style="color: #ffffff;">Hub</span></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
                    aria-controls="navbarNavAltMarkup" aria-expanded="fa fa-booklse" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav ms-auto">
                    @{
                        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                    }
                    @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                    {
                        <a class="nav-link" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                    }
                    <a class="nav-link" asp-action="Profile" asp-controller="User" asp-route-id="@userId">Profile</a>
                    <a class="nav-link" asp-action="Index" asp-controller="Application">Projects</a>
                    <a class="nav-link" asp-action="Index" asp-controller="Document">Library</a>
                    <a class="nav-link" asp-action="Index" asp-controller="User">Users</a>
               
                    @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                    {
                        <a class="nav-link mx-3" data-bs-toggle="tooltip" data-bs-placement="bottom"
                        data-bs-title="Tooltip on bottom" asp-controller="Document" asp-action="Create">
                            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#d1d1d1"
                            class="bi bi-plus-lg" viewBox="0 0 16 16">
                                <path fill-rule="evenodd"
                                d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" />
                            </svg>
                        </a>
                    }
                </div>
            </div>
        </div>
    </nav>
    <section class="container-fluid Intro p-5">
        <div class="container d-flex flex-column-reverse justify-content-center align-items-center">

            <div class="form mx-3 my-2">
                <label for="search">
                    <input required="" autocomplete="off" placeholder="search ...." id="search" type="text">
                    <div class="icon">
                        <svg stroke-width="2" stroke="currentColor" viewBox="0 0 24 24" fill="none"
                             xmlns="http://www.w3.org/2000/svg" class="swap-on">
                            <path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" stroke-linejoin="round"
                                  stroke-linecap="round"></path>
                        </svg>
                        <svg stroke-width="2" stroke="currentColor" viewBox="0 0 24 24" fill="none"
                             xmlns="http://www.w3.org/2000/svg" class="swap-off">
                            <path d="M10 19l-7-7m0 0l7-7m-7 7h18" stroke-linejoin="round" stroke-linecap="round"></path>
                        </svg>
                    </div>
                    <button type="reset" class="close-btn">
                        <svg viewBox="0 0 20 20" class="h-5 w-5" xmlns="http://www.w3.org/2000/svg">
                            <path clip-rule="evenodd"
                                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                  fill-rule="evenodd"></path>
                        </svg>
                    </button>
                </label>
            </div>

            <h1>Library</h1>

        </div>
    </section>
    <section class="container-fluid courses-container p-lg-3 p-0">
        <div class="container row mx-auto">
            @foreach(var cource in Model)
            {
                <div class="col-lg-4 px-lg-3 p-0 py-3  cours-container">
                    <div class="cours" data-keywords="mathématiques, algèbre, nombres">
                        <div class="cours-header p-3"><i class="fa fa-book"></i></div>
                        <div class="cours-body p-3">
                            <h4>@cource.Name</h4>
                            <p>@cource.Description</p>
                            <h1 class="ps-3  like-container " id="@cource.id">
                                <i class="fa-sharp fa-solid fa-heart @(cource.IsLiked ? "checked" :  "unchecked")"></i>
                                <br><span class="likes">@cource.likesnumber like</span>
                            </h1>

                        </div>
                        <div class="cours-footer p-3 ">
                            <a href="@Url.Content(cource.CoursePath)"  class="btn px-5 mx-3" style="background-color: #10a84d;">
                                <i class="fa fa-cloud-download"></i>
                            </a>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                            {
                            <span class="delete btn btn-danger px-5 mx-3"  id="@cource.id">
                                <i class="fa fa-trash"></i>
                            </span>
                            }
                        </div>
                    </div>
                </div>

            }
        </div>
        <p class="text-center not-found ">not found</p>
    </section>
    <!--
             <div class="modal-content">
             <div class="modal-header">
                 <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                 <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
             </div>
             <div class="modal-body">
                 ...
             </div>
             <div class="modal-footer">
                 <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                 <button type="button" class="btn btn-primary">Save changes</button>
             </div>
         </div>
           -->
 
    <footer class="footer">
        <div class="container p-2">
            <p class="mb-0">© 2023 Your Website. All Rights Reserved.</p>
        </div>
    </footer>
    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    @Html.Raw("<script src='https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js' integrity='sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3' crossorigin='anonymous'></script>")


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js"
            integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz" crossorigin="anonymous">
    </script>
   
    <script type="text/javascript" src="~/js/cources.js"></script>
    <script>
       
        $(document).ready(function () {
            $(".like-container").click(function () {
                var item = $(this).attr("id");

                var clickedContainer = $(this); // Store a reference to the clicked container

                $.ajax({
                    url: '/Document/Like', // Replace with your controller and action route
                    method: 'POST',
                    data: { number: item }, // Send the number as a parameter
                    success: function (result) {
                        // Handle the response from the server
                        console.log(result);
                        clickedContainer.find(".likes").text(result + " Like"); // Use the stored reference
                        console.log("Like container clicked.");
                        clickedContainer.find(".fa-solid.fa-heart").toggleClass("checked unchecked");
                    },
                    error: function (error) {
                        console.log(error.status);
                        if (error.status == 401) {
                            Swal.fire({
                                title: 'Connection',
                                text:'you need connection to access to this feature',
                                icon: 'info',
                                showCancelButton: true,
                                confirmButtonText: 'Login',
                                cancelButtonText: 'Register',
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Code to execute when "Button 1" is clicked
                                    window.location.href = 'Account/Login'; // Replace with your desired URL
                                } else if (result.dismiss === Swal.DismissReason.cancel) {
                                    // Code to execute when "Button 2" is clicked
                                    window.location.href = 'Account/Register'; // Replace with your desired URL
                                }
                            });
                        }
                    }
                });
            });

        
          

        });
        var itemtodelete;
        var cardbutton;
        $(document).ready(function () {
            $(".delete").click(function () {
                console.log("desactivate button");
                $(".model-layer").css("display","flex");
                itemtodelete = $(this).attr("id");
                cardbutton = $(this);
            });
            $(".desactivate").click(function () {
                console.log("desactivate button"+itemtodelete);
                $(".model-layer").hide();
                $.ajax({
                    url: '/Document/Delete', // Replace with your controller and action route
                    method: 'POST',
                    data: { number: itemtodelete }, // Send the number as a parameter
                    success: function (result) {
                        // Handle the response from the server
                        console.log(result);
                        Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        )
                        cardbutton.closest(".cours-container").remove();
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });

            });
            $(".cancel").click(function () {
                $(".model-layer").hide();
            });
        });

    </script>

</body>

</html>